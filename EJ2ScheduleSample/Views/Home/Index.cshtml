@{
    ViewData["Title"] = "Home Page";
}
<br />
<ejs-schedule id="schedule" height="550px" currentView="Agenda" selectedDate="new DateTime(2018, 2, 15)" popupOpen="OnPopupOpen">
    <e-schedule-eventsettings dataSource="@ViewBag.appointments"></e-schedule-eventsettings>
    <e-schedule-views>
        <e-schedule-view option="Agenda" eventTemplate="#event-template"></e-schedule-view>
    </e-schedule-views>
</ejs-schedule>

<style>
    .custom-field-row {
        margin-bottom: 20px;
    }
</style>
<script id="event-template" type="text/x-template">
    <div class='template-wrap' style='background:${getColor(data.Category)}'>
        <div class="subject">${Subject}</div>
    </div>
</script>
<script>
    function getColor(category) {
        if (category == "Assigned")
            return 'green'
        else
            return 'red'
    };
    function OnPopupOpen(args) {
        // The below code examples used to display the custom field (Category) value in the event window
        if (args.type === 'Editor') {
            if (!args.element.querySelector('.custom-field-row')) {
                var row = ej.base.createElement('div', { className: 'custom-field-row' });
                var formElement = args.element.querySelector('.e-schedule-form');
                formElement.firstChild.insertBefore(row, args.element.querySelector('.e-title-location-row'));
                var container = ej.base.createElement('div', { className: 'custom-field-container' });
                var inputEle = ej.base.createElement('input', {
                    className: 'e-field', attrs: { name: 'Category' }
                });
                container.appendChild(inputEle);
                row.appendChild(container);
                var drowDownList = new ej.dropdowns.DropDownList({
                    dataSource: [
                        { text: 'Assigned', value: 'Assigned' },
                        { text: 'UnAssigned', value: 'UnAssigned' },
                    ],
                    fields: { text: 'text', value: 'value' },
                    value: (args.data).Category,
                    floatLabelType: 'Always', placeholder: 'Category'
                });
                drowDownList.appendTo(inputEle);
                inputEle.setAttribute('name', 'Category');
            }
        }
    }
</script>